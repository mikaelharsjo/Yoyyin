//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using Yoyyin.Data.Core;
using Yoyyin.Data.Core.Entities;


namespace Yoyyin.Data
{
    public partial class Visit : IVisit
    {
        #region Primitive Properties
    
        public virtual System.Guid UserId
        {
            get { return _userId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_userId != value)
                    {
                        if (User != null && User.UserId != value)
                        {
                            User = null;
                        }
                        _userId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private System.Guid _userId;
    
        public virtual Nullable<System.Guid> VisitingUserId
        {
            get { return _visitingUserId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_visitingUserId != value)
                    {
                        if (User1 != null && User1.UserId != value)
                        {
                            User1 = null;
                        }
                        _visitingUserId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<System.Guid> _visitingUserId;
    
        public virtual System.DateTime Created
        {
            get;
            set;
        }
    
        public virtual int UserVisitID
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual IUser User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private IUser _user;
    
        public virtual IUser User1
        {
            get { return _user1; }
            set
            {
                if (!ReferenceEquals(_user1, value))
                {
                    var previousValue = _user1;
                    _user1 = value;
                    FixupUser1(previousValue);
                }
            }
        }
        private IUser _user1;

        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupUser(IUser previousValue)
        {
            if (previousValue != null && previousValue.Visit.Contains(this))
            {
                previousValue.Visit.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.Visit.Contains(this))
                {
                    User.Visit.Add(this);
                }
                if (UserId != User.UserId)
                {
                    UserId = User.UserId;
                }
            }
        }
    
        private void FixupUser1(IUser previousValue)
        {
            if (previousValue != null && previousValue.Visit1.Contains(this))
            {
                previousValue.Visit1.Remove(this);
            }
    
            if (User1 != null)
            {
                if (!User1.Visit1.Contains(this))
                {
                    User1.Visit1.Add(this);
                }
                if (VisitingUserId != User1.UserId)
                {
                    VisitingUserId = User1.UserId;
                }
            }
            else if (!_settingFK)
            {
                VisitingUserId = null;
            }
        }

        #endregion
    }
}
