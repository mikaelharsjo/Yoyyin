using System;
using System.Web;
using System.Web.Routing;
using yoyyin.com.Lib;

namespace yoyyin.com
{
    public class Global : HttpApplication
    {
        void Application_Start(object sender, EventArgs e)
        {
            AddStaticRoutes();
            var userHelper = new UserHelper();

            foreach (var user in userHelper.GetAllUsers())
            {
                try
                {
                    if (!string.IsNullOrEmpty(user.Name))
                        RouteTable.Routes.MapPageRoute(user.Name, user.Name, "~/Member.aspx", false,
                                                       new RouteValueDictionary {{"UserID", user.UserId.ToString()}});
                }
                catch
                {
                    if (!string.IsNullOrEmpty(user.Name))
                        RouteTable.Routes.MapPageRoute(user.Name + 2, user.Name + 2, "~/Member.aspx", false,
                                                       new RouteValueDictionary {{"UserID", user.UserId.ToString()}});
                }
            }
        }

        private static void AddStaticRoutes()
        {
            RouteTable.Routes.MapPageRoute("Hitta_en_affärspartner", "Hitta_en_affärspartner", "~/About.aspx");
            RouteTable.Routes.MapPageRoute("Dokument_och_mallar", "Dokument_och_mallar", "~/Tools.aspx");
            RouteTable.Routes.MapPageRoute("Forum", "Forum", "~/Questions.aspx");
            RouteTable.Routes.MapPageRoute("Kalender", "Kalender", "~/Calendar.aspx");
            RouteTable.Routes.MapPageRoute("Mötesplatsen_för_affärspartners_Yoyyin", "Mötesplatsen_för_affärspartners_Yoyyin", "~/Default.aspx");
            RouteTable.Routes.MapPageRoute("links_foretagare_entreprenorer", "links_foretagare_entreprenorer", "~/Links.aspx");
            RouteTable.Routes.MapPageRoute("partners_branscher", "partners_branscher", "~/Members.aspx");
        }

        void Application_End(object sender, EventArgs e)
        {
            //  Code that runs on application shutdown
        }

        void Application_Error(object sender, EventArgs e)
        {
            // Code that runs when an unhandled error occurs
            Exception ex = Server.GetLastError();
            string message = ex.Message + "\n" + ex.Source + "\n" + ex.StackTrace + "\n" + ex.TargetSite;

            if (ex.InnerException != null)
                message += "\n" + ex.InnerException.Message;

            if (ex.InnerException != null && !ex.InnerException.Message.Contains("File does not exist"))
                WebHelpers.SendErrorMail(message);
        }

        void Session_Start(object sender, EventArgs e)
        {
            // Code that runs when a new session is started

        }

        void Session_End(object sender, EventArgs e)
        {
            // Code that runs when a session ends. 
            // Note: The Session_End event is raised only when the sessionstate mode
            // is set to InProc in the Web.config file. If session mode is set to StateServer 
            // or SQLServer, the event is not raised.

        }

    }
}
