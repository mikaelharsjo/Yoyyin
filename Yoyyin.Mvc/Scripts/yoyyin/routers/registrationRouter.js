// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["backbone", "views/registration/personalInfo", "views/registration/wanted", "views/registration/location", "views/registration/userType", "views/registration/userTypesNeeded", "views/registration/tags", "views/registration/upload", "views/registration/idea", "models/user"], function(Backbone, PersonalInfoView, WantedView, LocationView, UserTypeView, UserTypesNeededView, TagsView, UploadView, IdeaView, User) {
    var RegistrationRouter;
    return RegistrationRouter = (function(_super) {

      __extends(RegistrationRouter, _super);

      function RegistrationRouter() {
        return RegistrationRouter.__super__.constructor.apply(this, arguments);
      }

      RegistrationRouter.prototype.initialize = function() {
        return this.user = new User();
      };

      RegistrationRouter.prototype.routes = {
        "personalInfo": "personalInfo",
        "wanted": "wanted",
        "location": "location",
        "userType": "userType",
        "userTypesNeeded": "userTypesNeeded",
        "tags": "tags",
        "upload": "upload",
        "idea": "idea"
      };

      RegistrationRouter.prototype.personalInfo = function() {
        var view;
        view = new PersonalInfoView()({
          model: this.user
        });
        return view.render();
      };

      RegistrationRouter.prototype.wanted = function() {
        var view;
        view = new WantedView({
          model: this.user
        });
        return view.render();
      };

      RegistrationRouter.prototype.location = function() {
        var view;
        view = new LocationView({
          model: this.user
        });
        return view.render();
      };

      RegistrationRouter.prototype.userType = function() {
        var view;
        view = new UserTypeView({
          model: this.user
        });
        return view.render();
      };

      RegistrationRouter.prototype.userTypesNeeded = function() {
        var view;
        view = new UserTypesNeededView({
          model: this.user
        });
        return view.render();
      };

      RegistrationRouter.prototype.upload = function() {
        var view;
        view = new UploadView({
          model: this.user
        });
        return view.render();
      };

      RegistrationRouter.prototype.idea = function() {
        var view;
        view = new IdeaView({
          model: this.user
        });
        return view.render();
      };

      return RegistrationRouter;

    })(Backbone.Router);
  });

}).call(this);
