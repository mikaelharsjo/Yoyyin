// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["mustache", "views/registration/step", "views/shared/userTypeRadioButtonList", "text!templates/registration/userType.htm", "models/userType"], function(mustache, StepView, UserTypesRadioButtonList, template, UserType) {
    return UserType = (function(_super) {

      __extends(UserType, _super);

      function UserType() {
        return UserType.__super__.constructor.apply(this, arguments);
      }

      UserType.prototype._renderRadios = function() {
        var radios;
        return radios = new UserTypesRadioButtonList({
          el: $("#radios")
        });
      };

      UserType.prototype.render = function() {
        this.setHero({
          Headline: "Vilken Ã¤r din roll/titel?"
        });
        this.appendButtons({
          markup: mustache.render(template),
          previousStep: "location",
          nextStep: "userTypesNeeded"
        });
        return this._renderRadios();
      };

      UserType.prototype.events = {
        "click button": "add",
        "click .btn-primary": "save"
      };

      UserType.prototype.add = function() {
        var userType;
        userType = new UserType({
          Title: $("#title").val(),
          Description: $("#description").val()
        });
        userType.save();
        return renderRadios();
      };

      UserType.prototype.saveStep = function() {
        return this.model.set("UserType", $("#radios").find(":checked"));
      };

      return UserType;

    })(StepView);
  });

}).call(this);
