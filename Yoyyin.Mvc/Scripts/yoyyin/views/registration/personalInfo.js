// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["views/registration/step", "views/shared/tags/competences", "text!templates/registration/personalInfo.htm"], function(StepView, CompetencesView, template) {
    var PersonalInfo;
    return PersonalInfo = (function(_super) {

      __extends(PersonalInfo, _super);

      function PersonalInfo() {
        return PersonalInfo.__super__.constructor.apply(this, arguments);
      }

      PersonalInfo.prototype.initialize = function() {
        return console.log("step personal");
      };

      PersonalInfo.prototype.render = function() {
        var view;
        this.setHero({
          Headline: "Kul att du vill bli medlem, först vill vi höra om dig själv"
        });
        this.appendButtons({
          markup: template,
          previousStep: "personalInfo",
          nextStep: "wanted"
        });
        return view = new CompetencesView({
          el: $("#competences")
        });
      };

      PersonalInfo.prototype.save = function() {
        this.model.set("Name", this.$el.find('#name').val());
        this.model.set("Alias", this.$el.find('#alias').val());
        this.model.set("Email", this.$el.find('#email').val());
        this.model.set("Presentation", this.$el.find('#presentation').val());
        return console.log(this.model.toJSON());
      };

      return PersonalInfo;

    })(StepView);
  });

}).call(this);
