// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["underscore", "backbone", "mustache", "models/user", "models/currentUser", "views/users/user", "views/users/users", "views/currentUser/dashboard", "views/currentUser/inbox", "views/ideas/all", "views/currentUser/editProfile"], function(_, Backbone, mustache, UserModel, CurrentUserModel, UserView, UsersView, Dashboard, Inbox, ViewOfAllIdeas, EditProfile) {
    var Router;
    return Router = (function(_super) {

      __extends(Router, _super);

      function Router() {
        return Router.__super__.constructor.apply(this, arguments);
      }

      Router.prototype.routes = {
        "editProfile": "editProfile",
        "inbox": "inbox",
        "user/:id": "user",
        "users": "users",
        "dashboard": "dashboard",
        "ideas/all": "allIdeas"
      };

      Router.prototype.editProfile = function() {
        var view;
        return view = new EditProfile({
          el: $("#body")
        });
      };

      Router.prototype.allIdeas = function() {
        var view;
        return view = new ViewOfAllIdeas({
          el: $("#body")
        });
      };

      Router.prototype.user = function(id) {
        var user, view;
        user = new UserModel({
          id: id
        });
        view = new UserView({
          model: user,
          el: $("#body")
        });
        return user.fetch();
      };

      Router.prototype.inbox = function() {
        var inbox;
        return inbox = new Inbox({
          el: $('#body')
        });
      };

      Router.prototype.users = function() {
        var view;
        return view = new UsersView({
          el: $("#body")
        });
      };

      Router.prototype.dashboard = function() {
        var view;
        return view = new Dashboard({
          el: $("#body")
        });
      };

      return Router;

    })(Backbone.Router);
  });

}).call(this);
